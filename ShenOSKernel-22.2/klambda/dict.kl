"Copyright (c) 2010-2015, Mark Tarver

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors
may be used to endorse or promote products derived from this software without
specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
"

(defun shen.dict (V2312) (cond ((< V2312 1) (simple-error (cn "invalid initial dict size: " (shen.app V2312 "" shen.s)))) (true (let D (absvector (+ 3 V2312)) (let Tag (address-> D 0 shen.dictionary) (let Capacity (address-> D 1 V2312) (let Count (address-> D 2 0) (let Fill (shen.fillvector D 3 (+ 2 V2312) ()) D))))))))

(defun shen.dict? (V2314) (and (absvector? V2314) (= (trap-error (<-address V2314 0) (lambda E shen.not-dictionary)) shen.dictionary)))

(defun shen.dict-capacity (V2316) (<-address V2316 1))

(defun shen.dict-count (V2318) (<-address V2318 2))

(defun shen.dict-count-> (V2321 V2322) (address-> V2321 2 V2322))

(defun shen.<-dict-bucket (V2325 V2326) (<-address V2325 (+ 3 V2326)))

(defun shen.dict-bucket-> (V2330 V2331 V2332) (address-> V2330 (+ 3 V2331) V2332))

(defun shen.dict-update-count (V2336 V2337 V2338) (let Diff (- (length V2338) (length V2337)) (shen.dict-count-> V2336 (+ Diff (shen.dict-count V2336)))))

(defun shen.dict-> (V2342 V2343 V2344) (let N (hash V2343 (shen.dict-capacity V2342)) (let Bucket (shen.<-dict-bucket V2342 N) (let NewBucket (shen.assoc-set V2343 V2344 Bucket) (let Change (shen.dict-bucket-> V2342 N NewBucket) (let Count (shen.dict-update-count V2342 Bucket NewBucket) V2344))))))

(defun shen.<-dict (V2347 V2348) (let N (hash V2348 (shen.dict-capacity V2347)) (let Bucket (shen.<-dict-bucket V2347 N) (let Result (assoc V2348 Bucket) (if (empty? Result) (simple-error (cn "value " (shen.app V2348 " not found in dict
" shen.a))) (tl Result))))))

(defun shen.dict-rm (V2351 V2352) (let N (hash V2352 (shen.dict-capacity V2351)) (let Bucket (shen.<-dict-bucket V2351 N) (let NewBucket (shen.assoc-rm V2352 Bucket) (let Change (shen.dict-bucket-> V2351 N NewBucket) (let Count (shen.dict-update-count V2351 Bucket NewBucket) V2352))))))

(defun shen.dict-fold (V2356 V2357 V2358) (let Limit (shen.dict-capacity V2357) (shen.dict-fold-h V2356 V2357 V2358 0 Limit)))

(defun shen.dict-fold-h (V2365 V2366 V2367 V2368 V2369) (cond ((= V2369 V2368) V2367) (true (let B (shen.<-dict-bucket V2366 V2368) (let Acc (shen.bucket-fold V2365 B V2367) (shen.dict-fold-h V2365 V2366 Acc (+ 1 V2368) V2369))))))

(defun shen.bucket-fold (V2373 V2374 V2375) (cond ((= () V2374) V2375) ((and (cons? V2374) (cons? (hd V2374))) (V2373 (hd (hd V2374)) (tl (hd V2374)) (shen.bucket-fold V2373 (tl V2374) V2375))) (true (shen.f_error shen.bucket-fold))))

(defun shen.dict-keys (V2377) (shen.dict-fold (lambda K (lambda _ (lambda Acc (cons K Acc)))) V2377 ()))

(defun shen.dict-values (V2379) (shen.dict-fold (lambda _ (lambda V (lambda Acc (cons V Acc)))) V2379 ()))



