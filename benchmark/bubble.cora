(load "../src/init.cora")
(load-so "random.so")

(func make-bubble-list
      l 0 => l
      l n => (make-bubble-list (cons (random 65535) l) (- n 1)))

(set '*bubble-list* (make-bubble-list [] 1000))

(defun fix (f l)
  (let l1 (f l)
       (if (= l l1)
           l
         (fix f l1))))

(func bubble-once
      [] => []
      [x] => [x]
      [x . y] => (bubble-help x y))

(func bubble-help
      x [] => [x]
      x [y . l] => [y . (bubble-help x l)] where (> x y)
      x [y . l] => (cons x (bubble-help y l)))

(defun bubble (l)
  (fix bubble-once l))


(let t1 (get-time 'run)
     (let _ (bubble *bubble-list*)
          (let t2 (get-time 'run)
               (- t2 t1))))
